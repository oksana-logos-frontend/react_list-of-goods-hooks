{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","sort","product1","product2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","curent","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EApCD,SACLA,EADK,GAIJ,IAFCF,EAEF,EAFEA,SAAUH,EAEZ,EAFYA,WAGNM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQN,GACN,KAAKP,EAASc,QACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKb,EAASgB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAYOS,CAAkBlB,EAAiB,CAAEM,WAAUH,eAmB7D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,kBACA,CAAE,WAAYf,IAAaP,EAASc,UAEtCS,QA1ByB,WAC/Bf,EAAYR,EAASc,UAmBjB,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaP,EAASgB,SAEtCO,QAjCuB,WAC7Bf,EAAYR,EAASgB,SA0BjB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAflB,IAEhBmB,QAxCc,WACpBlB,GAAc,SAAAmB,GAAM,OAAKA,MAiCrB,sBAWEjB,IAAaP,EAASM,MAAQF,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QA7CU,WAClBlB,GAAc,GACdG,EAAYR,EAASM,OAwCf,sBAUJ,6BACE,6BAEIG,EAAMgB,KAAI,SAAAC,GAAO,OACf,oBAAI,UAAQ,OAAZ,SACGA,eChIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c93bb13b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((product1, product2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return product1.localeCompare(product2);\n\n      case SortType.LENGTH:\n        return product1.length - product2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  const handleSortListByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const handleSortListByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const hendleReverse = () => {\n    setIsReversed(curent => !curent);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info ',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={handleSortListByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortListByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': isReversed === false },\n          )}\n          onClick={hendleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {\n            goods.map(product => (\n              <li data-cy=\"Good\">\n                {product}\n              </li>\n            ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}